I"b…
<h1 id="face-recognition-using-eigenfaces"><strong>Face Recognition using Eigenfaces</strong></h1>
<hr />

<p>####We will be using <a href="https://fei.edu.br/~cet/facedatabase.html">FEI Face Database</a>  for our face recognition purpose. 
<em>Datasets consist of faces of 200 people and each person has two frontal images (one with a neutral expression and the other with a smiling facial expression), there are 400 full frontal face images manually registered and cropped.</em>
<br /><br /><strong>We will use normalized, equalized and cropped frontal face images.</strong></p>

<p>Add dataset in your Colab using:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>!wget &lt;link&gt; 
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">!</span> <span class="n">wget</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">fei</span><span class="o">.</span><span class="n">edu</span><span class="o">.</span><span class="n">br</span><span class="o">/~</span><span class="n">cet</span><span class="o">/</span><span class="n">frontalimages_manuallyaligned_part1</span><span class="o">.</span><span class="nb">zip</span>
<span class="err">!</span> <span class="n">wget</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">fei</span><span class="o">.</span><span class="n">edu</span><span class="o">.</span><span class="n">br</span><span class="o">/~</span><span class="n">cet</span><span class="o">/</span><span class="n">frontalimages_manuallyaligned_part2</span><span class="o">.</span><span class="nb">zip</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>--2019-12-12 05:17:05--  https://fei.edu.br/~cet/frontalimages_manuallyaligned_part1.zip
Resolving fei.edu.br (fei.edu.br)... 200.232.90.210
Connecting to fei.edu.br (fei.edu.br)|200.232.90.210|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 6209322 (5.9M) [application/x-zip-compressed]
Saving to: â€˜frontalimages_manuallyaligned_part1.zipâ€™

frontalimages_manua 100%[===================&gt;]   5.92M  3.23MB/s    in 1.8s    

2019-12-12 05:17:07 (3.23 MB/s) - â€˜frontalimages_manuallyaligned_part1.zipâ€™ saved [6209322/6209322]

--2019-12-12 05:17:11--  https://fei.edu.br/~cet/frontalimages_manuallyaligned_part2.zip
Resolving fei.edu.br (fei.edu.br)... 200.232.90.210
Connecting to fei.edu.br (fei.edu.br)|200.232.90.210|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 6168379 (5.9M) [application/x-zip-compressed]
Saving to: â€˜frontalimages_manuallyaligned_part2.zipâ€™

frontalimages_manua 100%[===================&gt;]   5.88M  3.02MB/s    in 1.9s    

2019-12-12 05:17:13 (3.02 MB/s) - â€˜frontalimages_manuallyaligned_part2.zipâ€™ saved [6168379/6168379]
</code></pre></div></div>

<p>Unzip your zip files using:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>!unzip &lt;name_of_your_zip_file&gt;
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">!</span><span class="n">unzip</span> <span class="n">frontalimages_manuallyaligned_part1</span><span class="o">.</span><span class="nb">zip</span>
<span class="err">!</span><span class="n">unzip</span> <span class="n">frontalimages_manuallyaligned_part2</span><span class="o">.</span><span class="nb">zip</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Archive:  frontalimages_manuallyaligned_part1.zip
  inflating: 91b.jpg                 
  inflating: 92a.jpg                 
  inflating: 92b.jpg                 
  inflating: 93a.jpg                 
  inflating: 93b.jpg                 
  inflating: 94a.jpg                 
  inflating: 94b.jpg                 
  inflating: 95a.jpg                 
  inflating: 95b.jpg                 
  inflating: 96a.jpg                 
  inflating: 96b.jpg                 
  inflating: 97a.jpg                 
  inflating: 97b.jpg                 
  inflating: 98a.jpg                 
  inflating: 98b.jpg                 
  inflating: 99a.jpg                 
  inflating: 99b.jpg                 
  inflating: 100a.jpg                
  inflating: 100b.jpg                
  inflating: 1a.jpg                  
  inflating: 1b.jpg                  
  inflating: 2a.jpg                  
  inflating: 2b.jpg                  
  inflating: 3a.jpg                  
  inflating: 3b.jpg                  
  inflating: 4a.jpg                  
  inflating: 4b.jpg                  
  inflating: 5b.jpg                  
  inflating: 5a.jpg                  
  inflating: 6a.jpg                  
  inflating: 6b.jpg                  
  inflating: 7a.jpg                  
  inflating: 7b.jpg                  
  inflating: 8a.jpg                  
  inflating: 8b.jpg                  
  inflating: 9a.jpg                  
  inflating: 9b.jpg                  
  inflating: 10a.jpg                 
  inflating: 10b.jpg                 
  inflating: 11a.jpg                 
  inflating: 11b.jpg                 
  inflating: 12a.jpg                 
  inflating: 12b.jpg                 
  inflating: 13a.jpg                 
  inflating: 13b.jpg                 
  inflating: 14a.jpg                 
  inflating: 14b.jpg                 
  inflating: 15a.jpg                 
  inflating: 15b.jpg                 
  inflating: 16a.jpg                 
  inflating: 16b.jpg                 
  inflating: 17a.jpg                 
  inflating: 17b.jpg                 
  inflating: 18a.jpg                 
  inflating: 18b.jpg                 
  inflating: 19a.jpg                 
  inflating: 19b.jpg                 
  inflating: 20a.jpg                 
  inflating: 20b.jpg                 
  inflating: 21a.jpg                 
  inflating: 21b.jpg                 
  inflating: 22a.jpg                 
  inflating: 22b.jpg                 
  inflating: 23a.jpg                 
  inflating: 23b.jpg                 
  inflating: 24a.jpg                 
  inflating: 24b.jpg                 
  inflating: 25a.jpg                 
  inflating: 25b.jpg                 
  inflating: 26a.jpg                 
  inflating: 26b.jpg                 
  inflating: 27a.jpg                 
  inflating: 27b.jpg                 
  inflating: 28a.jpg                 
  inflating: 28b.jpg                 
  inflating: 29a.jpg                 
  inflating: 29b.jpg                 
  inflating: 30a.jpg                 
  inflating: 30b.jpg                 
  inflating: 31a.jpg                 
  inflating: 31b.jpg                 
  inflating: 32a.jpg                 
  inflating: 32b.jpg                 
  inflating: 33a.jpg                 
  inflating: 33b.jpg                 
  inflating: 34a.jpg                 
  inflating: 34b.jpg                 
  inflating: 35a.jpg                 
  inflating: 35b.jpg                 
  inflating: 36a.jpg                 
  inflating: 36b.jpg                 
  inflating: 37a.jpg                 
  inflating: 37b.jpg                 
  inflating: 38a.jpg                 
  inflating: 38b.jpg                 
  inflating: 39a.jpg                 
  inflating: 39b.jpg                 
  inflating: 40a.jpg                 
  inflating: 40b.jpg                 
  inflating: 41a.jpg                 
  inflating: 41b.jpg                 
  inflating: 42a.jpg                 
  inflating: 42b.jpg                 
  inflating: 43a.jpg                 
  inflating: 43b.jpg                 
  inflating: 44a.jpg                 
  inflating: 44b.jpg                 
  inflating: 45a.jpg                 
  inflating: 45b.jpg                 
  inflating: 46a.jpg                 
  inflating: 46b.jpg                 
  inflating: 47a.jpg                 
  inflating: 47b.jpg                 
  inflating: 48a.jpg                 
  inflating: 48b.jpg                 
  inflating: 49a.jpg                 
  inflating: 49b.jpg                 
  inflating: 50a.jpg                 
  inflating: 50b.jpg                 
  inflating: 51a.jpg                 
  inflating: 51b.jpg                 
  inflating: 52a.jpg                 
  inflating: 52b.jpg                 
  inflating: 53a.jpg                 
  inflating: 53b.jpg                 
  inflating: 54a.jpg                 
  inflating: 54b.jpg                 
  inflating: 55a.jpg                 
  inflating: 55b.jpg                 
  inflating: 56a.jpg                 
  inflating: 56b.jpg                 
  inflating: 57a.jpg                 
  inflating: 57b.jpg                 
  inflating: 58a.jpg                 
  inflating: 58b.jpg                 
  inflating: 59a.jpg                 
  inflating: 59b.jpg                 
  inflating: 60a.jpg                 
  inflating: 60b.jpg                 
  inflating: 61a.jpg                 
  inflating: 61b.jpg                 
  inflating: 62a.jpg                 
  inflating: 62b.jpg                 
  inflating: 63a.jpg                 
  inflating: 63b.jpg                 
  inflating: 64a.jpg                 
  inflating: 64b.jpg                 
  inflating: 65a.jpg                 
  inflating: 65b.jpg                 
  inflating: 66a.jpg                 
  inflating: 66b.jpg                 
  inflating: 67a.jpg                 
  inflating: 67b.jpg                 
  inflating: 68a.jpg                 
  inflating: 68b.jpg                 
  inflating: 69a.jpg                 
  inflating: 69b.jpg                 
  inflating: 70a.jpg                 
  inflating: 70b.jpg                 
  inflating: 71a.jpg                 
  inflating: 71b.jpg                 
  inflating: 72a.jpg                 
  inflating: 72b.jpg                 
  inflating: 73a.jpg                 
  inflating: 73b.jpg                 
  inflating: 74a.jpg                 
  inflating: 74b.jpg                 
  inflating: 75a.jpg                 
  inflating: 75b.jpg                 
  inflating: 76a.jpg                 
  inflating: 76b.jpg                 
  inflating: 77a.jpg                 
  inflating: 77b.jpg                 
  inflating: 78a.jpg                 
  inflating: 78b.jpg                 
  inflating: 79a.jpg                 
  inflating: 79b.jpg                 
  inflating: 80a.jpg                 
  inflating: 80b.jpg                 
  inflating: 81a.jpg                 
  inflating: 81b.jpg                 
  inflating: 82a.jpg                 
  inflating: 82b.jpg                 
  inflating: 83a.jpg                 
  inflating: 83b.jpg                 
  inflating: 84a.jpg                 
  inflating: 84b.jpg                 
  inflating: 85a.jpg                 
  inflating: 85b.jpg                 
  inflating: 86a.jpg                 
  inflating: 86b.jpg                 
  inflating: 87a.jpg                 
  inflating: 87b.jpg                 
  inflating: 88a.jpg                 
  inflating: 88b.jpg                 
  inflating: 89a.jpg                 
  inflating: 89b.jpg                 
  inflating: 90a.jpg                 
  inflating: 90b.jpg                 
  inflating: 91a.jpg                 
Archive:  frontalimages_manuallyaligned_part2.zip
  inflating: 158b.jpg                
  inflating: 101a.jpg                
  inflating: 101b.jpg                
  inflating: 102a.jpg                
  inflating: 102b.jpg                
  inflating: 103a.jpg                
  inflating: 103b.jpg                
  inflating: 104a.jpg                
  inflating: 104b.jpg                
  inflating: 105a.jpg                
  inflating: 105b.jpg                
  inflating: 106a.jpg                
  inflating: 106b.jpg                
  inflating: 107a.jpg                
  inflating: 107b.jpg                
  inflating: 108a.jpg                
  inflating: 108b.jpg                
  inflating: 109a.jpg                
  inflating: 109b.jpg                
  inflating: 110a.jpg                
  inflating: 110b.jpg                
  inflating: 111a.jpg                
  inflating: 111b.jpg                
  inflating: 112a.jpg                
  inflating: 112b.jpg                
  inflating: 113a.jpg                
  inflating: 113b.jpg                
  inflating: 114a.jpg                
  inflating: 114b.jpg                
  inflating: 115a.jpg                
  inflating: 115b.jpg                
  inflating: 116a.jpg                
  inflating: 116b.jpg                
  inflating: 117a.jpg                
  inflating: 117b.jpg                
  inflating: 118a.jpg                
  inflating: 118b.jpg                
  inflating: 119a.jpg                
  inflating: 119b.jpg                
  inflating: 120a.jpg                
  inflating: 120b.jpg                
  inflating: 121a.jpg                
  inflating: 121b.jpg                
  inflating: 122a.jpg                
  inflating: 122b.jpg                
  inflating: 123a.jpg                
  inflating: 123b.jpg                
  inflating: 124a.jpg                
  inflating: 124b.jpg                
  inflating: 125a.jpg                
  inflating: 125b.jpg                
  inflating: 126a.jpg                
  inflating: 126b.jpg                
  inflating: 127a.jpg                
  inflating: 127b.jpg                
  inflating: 128a.jpg                
  inflating: 128b.jpg                
  inflating: 129a.jpg                
  inflating: 129b.jpg                
  inflating: 130a.jpg                
  inflating: 130b.jpg                
  inflating: 131a.jpg                
  inflating: 131b.jpg                
  inflating: 132a.jpg                
  inflating: 132b.jpg                
  inflating: 133a.jpg                
  inflating: 133b.jpg                
  inflating: 134a.jpg                
  inflating: 134b.jpg                
  inflating: 135a.jpg                
  inflating: 135b.jpg                
  inflating: 136a.jpg                
  inflating: 136b.jpg                
  inflating: 137a.jpg                
  inflating: 137b.jpg                
  inflating: 138a.jpg                
  inflating: 138b.jpg                
  inflating: 139a.jpg                
  inflating: 139b.jpg                
  inflating: 140a.jpg                
  inflating: 140b.jpg                
  inflating: 141a.jpg                
  inflating: 141b.jpg                
  inflating: 142a.jpg                
  inflating: 142b.jpg                
  inflating: 143a.jpg                
  inflating: 143b.jpg                
  inflating: 144a.jpg                
  inflating: 144b.jpg                
  inflating: 145a.jpg                
  inflating: 145b.jpg                
  inflating: 146a.jpg                
  inflating: 146b.jpg                
  inflating: 147a.jpg                
  inflating: 147b.jpg                
  inflating: 148a.jpg                
  inflating: 148b.jpg                
  inflating: 149a.jpg                
  inflating: 149b.jpg                
  inflating: 150a.jpg                
  inflating: 150b.jpg                
  inflating: 151a.jpg                
  inflating: 151b.jpg                
  inflating: 152a.jpg                
  inflating: 152b.jpg                
  inflating: 153a.jpg                
  inflating: 153b.jpg                
  inflating: 154a.jpg                
  inflating: 154b.jpg                
  inflating: 155a.jpg                
  inflating: 155b.jpg                
  inflating: 156a.jpg                
  inflating: 156b.jpg                
  inflating: 157a.jpg                
  inflating: 157b.jpg                
  inflating: 159a.jpg                
  inflating: 159b.jpg                
  inflating: 160a.jpg                
  inflating: 160b.jpg                
  inflating: 161a.jpg                
  inflating: 161b.jpg                
  inflating: 162a.jpg                
  inflating: 162b.jpg                
  inflating: 163a.jpg                
  inflating: 163b.jpg                
  inflating: 164a.jpg                
  inflating: 164b.jpg                
  inflating: 165a.jpg                
  inflating: 165b.jpg                
  inflating: 166a.jpg                
  inflating: 166b.jpg                
  inflating: 167a.jpg                
  inflating: 167b.jpg                
  inflating: 168a.jpg                
  inflating: 168b.jpg                
  inflating: 169a.jpg                
  inflating: 169b.jpg                
  inflating: 170a.jpg                
  inflating: 170b.jpg                
  inflating: 171a.jpg                
  inflating: 171b.jpg                
  inflating: 172a.jpg                
  inflating: 172b.jpg                
  inflating: 173a.jpg                
  inflating: 173b.jpg                
  inflating: 174a.jpg                
  inflating: 174b.jpg                
  inflating: 175a.jpg                
  inflating: 175b.jpg                
  inflating: 176a.jpg                
  inflating: 176b.jpg                
  inflating: 177a.jpg                
  inflating: 177b.jpg                
  inflating: 178a.jpg                
  inflating: 178b.jpg                
  inflating: 179a.jpg                
  inflating: 179b.jpg                
  inflating: 180a.jpg                
  inflating: 180b.jpg                
  inflating: 181a.jpg                
  inflating: 181b.jpg                
  inflating: 182a.jpg                
  inflating: 182b.jpg                
  inflating: 183a.jpg                
  inflating: 183b.jpg                
  inflating: 184a.jpg                
  inflating: 184b.jpg                
  inflating: 185a.jpg                
  inflating: 185b.jpg                
  inflating: 186a.jpg                
  inflating: 186b.jpg                
  inflating: 187a.jpg                
  inflating: 187b.jpg                
  inflating: 188a.jpg                
  inflating: 188b.jpg                
  inflating: 189a.jpg                
  inflating: 189b.jpg                
  inflating: 190a.jpg                
  inflating: 190b.jpg                
  inflating: 191a.jpg                
  inflating: 191b.jpg                
  inflating: 192a.jpg                
  inflating: 192b.jpg                
  inflating: 193a.jpg                
  inflating: 193b.jpg                
  inflating: 194a.jpg                
  inflating: 194b.jpg                
  inflating: 195a.jpg                
  inflating: 195b.jpg                
  inflating: 196a.jpg                
  inflating: 196b.jpg                
  inflating: 197a.jpg                
  inflating: 197b.jpg                
  inflating: 198a.jpg                
  inflating: 198b.jpg                
  inflating: 199a.jpg                
  inflating: 199b.jpg                
  inflating: 200a.jpg                
  inflating: 200b.jpg                
  inflating: 158a.jpg                
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># importing all the necessary packages 
</span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>
</code></pre></div></div>

<p>###Vectorization
We will use Python Imaging Library (PIL) to load images from files.
<code class="highlighter-rouge">PIL.Image.open()</code> Opens and identifies the given image file.<code class="highlighter-rouge">Note</code> Open into greyscale, or L(Luminance) mode:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>img = Image.open(f'{i}a.jpg').convert('L')  # i ranges from 1 to 200
img = img.resize((width, height),Image.ANTIALIAS) # for speed
</code></pre></div></div>
<p>Rearrange each Face image N x N into a column vector N<sup>2</sup> x 1. After Vectorization the shape of face matrix should be 200 x (width x height)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># neutral face
</span><span class="n">neutral</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">200</span><span class="p">):</span>
    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="n">img</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="nb">open</span><span class="p">(</span><span class="n">f</span><span class="s">'{i}b.jpg'</span><span class="p">)</span><span class="o">.</span><span class="n">convert</span><span class="p">(</span><span class="s">'L'</span><span class="p">)</span>
    <span class="n">img</span> <span class="o">=</span> <span class="n">img</span><span class="o">.</span><span class="n">resize</span><span class="p">((</span><span class="mi">58</span><span class="p">,</span><span class="mi">49</span><span class="p">),</span> <span class="n">Image</span><span class="o">.</span><span class="n">ANTIALIAS</span><span class="p">)</span>
    <span class="n">img2</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">img</span><span class="p">)</span><span class="o">.</span><span class="n">flatten</span><span class="p">()</span> <span class="c1"># vectorization
</span>    <span class="n">neutral</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">img2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Check face_matrix.shape 
</span>
<span class="n">faces_matrix</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">vstack</span><span class="p">(</span><span class="n">neutral</span><span class="p">)</span>
<span class="n">faces_matrix</span><span class="o">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(200, 2842)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Find mean_face
</span>
<span class="n">mean_face</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">faces_matrix</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">mean_face</span><span class="o">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(2842,)
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>plt.imshow(mean_face.reshape(height,width),cmap='gray'); 
plt.title('Mean Face')
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">mean_face</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">49</span><span class="p">,</span><span class="mi">58</span><span class="p">),</span><span class="n">cmap</span><span class="o">=</span><span class="s">'gray'</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;matplotlib.image.AxesImage at 0x7f6fe62d8e80&gt;
</code></pre></div></div>

<p><img src="output_12_1.png" alt="png" /></p>

<h3 id="normalization">Normalization</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Perfrom Normalization
</span><span class="n">faces_norm</span> <span class="o">=</span> <span class="n">faces_matrix</span> <span class="o">-</span> <span class="n">mean_face</span>
<span class="n">faces_norm</span><span class="o">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(200, 2842)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Calculate covariance matrix
#np.cov expects features as rows and observations as columns, so transpose
</span><span class="n">face_cov</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">faces_norm</span><span class="o">.</span><span class="n">T</span><span class="p">)</span>
<span class="n">face_cov</span><span class="o">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(2842, 2842)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Find Eigen Vectors and Eigen Values, you can use SVD from np.linalg.svd
</span><span class="n">eigen_vecs</span><span class="p">,</span> <span class="n">eigen_vals</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">svd</span><span class="p">(</span><span class="n">face_cov</span><span class="p">)</span>
<span class="n">eigen_vecs</span><span class="o">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(2842, 2842)
</code></pre></div></div>

<p>Plot the first 10 Eigenfaces</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fig, axs = plt.subplots(1,3,figsize=(15,5))
for i in np.arange(10):
    ax = plt.subplot(2,5,i+1)
    img = &lt;eigen_vectors&gt;[:,i].reshape(height,width)
    plt.imshow(img, cmap='gray')
fig.suptitle("First 10 Eigenfaces", fontsize=16)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Plot the first 10 Eigenfaces
</span><span class="n">fig</span><span class="p">,</span> <span class="n">axs</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
    <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">img</span> <span class="o">=</span> <span class="n">eigen_vecs</span><span class="p">[:,</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">49</span><span class="p">,</span><span class="mi">58</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'gray'</span><span class="p">)</span>
<span class="n">fig</span><span class="o">.</span><span class="n">suptitle</span><span class="p">(</span><span class="s">"First 10 Eigenfaces"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">16</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 0.98, 'First 10 Eigenfaces')
</code></pre></div></div>

<p><img src="output_18_1.png" alt="png" /></p>

<p>Reconstruction with increasing Eigenfaces</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fig, axs = plt.subplots(2,5,figsize=(15,6))
for k, i in zip([0,1,9,19,39,79,159,199,399,799],np.arange(10)):
    # Reconstruct the first picture '1a.jpg' whose index is 0.
    # Get PC scores of the images (wights)
    # Reconstruct first face in dataset using k PCs (projected_face)
    ax = plt.subplot(2,5,i+1)
    ax.set_title("k = "+str(k+1))
    plt.imshow(projected_face.reshape(height,width)+mean_face.reshape(height,width),cmap='gray');
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Reconstruct with increasing Eigenfaces
</span><span class="n">fig</span><span class="p">,</span> <span class="n">axs</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">39</span><span class="p">,</span><span class="mi">79</span><span class="p">,</span><span class="mi">159</span><span class="p">,</span><span class="mi">199</span><span class="p">,</span><span class="mi">399</span><span class="p">,</span><span class="mi">799</span><span class="p">],</span><span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">)):</span>
    <span class="c1"># Reconstruct the first picture '1a.jpg' whose index is 0.
</span>    <span class="n">weight</span> <span class="o">=</span> <span class="n">faces_norm</span><span class="p">[</span><span class="mi">0</span><span class="p">,:]</span><span class="o">.</span><span class="n">dot</span><span class="p">(</span><span class="n">eigen_vecs</span><span class="p">[:,:</span><span class="n">k</span><span class="p">])</span> <span class="c1"># Get PC scores of the images
</span>    <span class="n">projected_face</span> <span class="o">=</span> <span class="n">weight</span><span class="o">.</span><span class="n">dot</span><span class="p">(</span><span class="n">eigen_vecs</span><span class="p">[:,:</span><span class="n">k</span><span class="p">]</span><span class="o">.</span><span class="n">T</span><span class="p">)</span> <span class="c1"># Reconstruct first face in dataset using k PCs
</span>    <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">"k = "</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">projected_face</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">49</span><span class="p">,</span><span class="mi">58</span><span class="p">)</span><span class="o">+</span><span class="n">mean_face</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">49</span><span class="p">,</span><span class="mi">58</span><span class="p">),</span><span class="n">cmap</span><span class="o">=</span><span class="s">'gray'</span><span class="p">);</span>
<span class="n">fig</span><span class="o">.</span><span class="n">suptitle</span><span class="p">((</span><span class="s">"Reconstruction with Increasing Eigenfaces"</span><span class="p">),</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">16</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 0.98, 'Reconstruction with Increasing Eigenfaces')
</code></pre></div></div>

<p><img src="output_20_1.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>
:ET